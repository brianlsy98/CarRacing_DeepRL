
############## Trials ################
Trial 1 :
1. hidden layer dim = (64, 64)
2. obs_dim28 -> i in range(26)
3. input_velocity = 1.5

    ---> result : minVel exceed time limit.. also succeed only randomly



Trial 2 change :   
1. hidden layer dim = (128, 64, 32)
2. obs_dim28 -> i in range(251)
3. input_velocity = 1.5 ~ 3.0 w.r.t input_steering



Trial 3 change:
1. reward :
    - reward += cur_pos.position - prv_pos.position
    - if crash : reward -= 500
2. obs -> mean : 4i + 80 -> 5i + 10 (217 obs dim)
3. layer (input to output) -> 217, (128, 64, 32), 11



Trial 4 change:     *** current ***
1. action dimension 7
    -> (ang -, vel -), (ang -, vel =), (ang =, vel -), (ang =, vel =), (ang =, vel +), (ang +, vel =), (ang +, vel -)
    * ang +- step : 0.1 (clip -1.5 ~ 1.5)
    * vel +- step : 0.1 (clip 1.5 ~ 3.0)
2. layer (input to output)
    -> 26 + 2(prv vel & angle), (64, 64, 32), 7

    ---> result : unsuccessful ( first zone not solved )


Trial 5 change:
1. obs_lidar = observation[:,:-2]
2. obs_prevact = observation[:,-2:]

input_steering = 
input_velocity = 


######################################





############ Saved Model #############
trial_1 : minVel로 학습, hidden dim = (64, 64), obsdim = 28
    ------> Exceed time limit 뜬다. + 가끔 주행완료

trial_2 : minVel ~ maxVel로 학습, hidden_dim = (128, 64, 32), obsdim = 217, reward += input_velocity, reward -= 500 when crash
    ------> Map 1   ****** current

trial_3 : maxVel로 학습, hidden_dim = (128, 64, 32), obsdim = 217, obs clip method change, reward -= 500 when crash



######################################






